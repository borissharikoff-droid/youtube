#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from channel_manager import channel_manager
import json

def test_bot_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
    print("1. üì∫ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    try:
        channels = channel_manager.get_channels()
        print(f"   ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
        
        for i, channel in enumerate(channels, 1):
            print(f"   {i}. {channel['name']}")
            print(f"      Channel ID: {channel.get('channel_id', '–ù–ï–¢')}")
            print(f"      Username: {channel.get('username', '–ù–ï–¢')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        expected_channels = ["–ì–æ–≤–æ—Ä–∏–ª–∫–∏ —Å–æ—Ñ—Ç–æ–º", "–ü—Ä–µ–º–∏—è –¥–∞—Ä–≤–∏–Ω–∞", "–ú–∏–ª–∏—Ç–∞—Ä–∏"]
        actual_names = [ch['name'] for ch in channels]
        
        if set(expected_channels) == set(actual_names):
            print("   ‚úÖ –í—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print("   ‚ùå –ù–µ –≤—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
            print(f"   –û–∂–∏–¥–∞–µ–º—ã–µ: {expected_channels}")
            print(f"   –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ: {actual_names}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞–Ω–∞–ª–æ–≤: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("2. üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    try:
        with open('channels_config.json', 'r', encoding='utf-8') as f:
            config_data = json.load(f)
            print(f"   ‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω")
            print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {config_data.get('last_updated', '–ù–ï–¢')}")
            print(f"   üì∫ –ö–∞–Ω–∞–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ: {len(config_data.get('channels', []))}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            for channel in config_data.get('channels', []):
                if 'name' not in channel:
                    print("   ‚ùå –ö–∞–Ω–∞–ª –±–µ–∑ –∏–º–µ–Ω–∏")
                if 'channel_id' not in channel:
                    print("   ‚ùå –ö–∞–Ω–∞–ª –±–µ–∑ channel_id")
                if 'username' not in channel:
                    print("   ‚ùå –ö–∞–Ω–∞–ª –±–µ–∑ username")
                    
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
    print("3. ‚ûï –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞:")
    try:
        result = channel_manager.add_channel(
            name="–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏",
            username="@test_channel",
            channel_id="UCtest123456789"
        )
        
        if result['success']:
            print(f"   ‚úÖ {result['message']}")
            
            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª
            channels = channel_manager.get_channels()
            test_index = -1
            for i, channel in enumerate(channels):
                if channel['name'] == "–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏":
                    test_index = i
                    break
            
            if test_index >= 0:
                remove_result = channel_manager.remove_channel(test_index)
                if remove_result['success']:
                    print("   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {remove_result['message']}")
        else:
            print(f"   ‚ùå {result['message']}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {e}")
    
    print()
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ Channel ID
    print("4. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ Channel ID:")
    channels = channel_manager.get_channels()
    for channel in channels:
        channel_id = channel.get('channel_id', '')
        if channel_id:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç Channel ID (–¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å UC –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 24 —Å–∏–º–≤–æ–ª–∞)
            if channel_id.startswith('UC') and len(channel_id) == 24:
                print(f"   ‚úÖ {channel['name']}: Channel ID –≤–∞–ª–∏–¥–µ–Ω")
            else:
                print(f"   ‚ùå {channel['name']}: Channel ID –Ω–µ–≤–∞–ª–∏–¥–µ–Ω ({channel_id})")
        else:
            print(f"   ‚ö†Ô∏è {channel['name']}: Channel ID –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    
    print()
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_bot_functionality()
