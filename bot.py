import logging
import sys
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
import os
# –í—ã–±–∏—Ä–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ä–µ–¥—ã
if os.getenv("RAILWAY_STATIC_URL"):
    import config_railway as config
else:
    import config
from youtube_stats_db import DatabaseYouTubeStats
from database import DatabaseManager
from request_tracker_db import DatabaseRequestTrackerExtended

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
try:
    logger.info("Starting YouTube Stats Bot...")
    logger.info(f"Telegram Token: {'Set' if config.TELEGRAM_TOKEN else 'Not set'}")
    logger.info(f"YouTube API Key: {'Set' if config.YOUTUBE_API_KEY else 'Not set'}")
    logger.info(f"Admin ID: {config.ADMIN_ID}")
    logger.info(f"Channels to monitor: {len(config.CHANNELS)}")
except Exception as e:
    logger.error(f"Configuration error: {e}")
    sys.exit(1)

def get_error_message(e):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
    error_message = "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏."
    if "quotaExceeded" in str(e):
        error_message = "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ YouTube API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    elif "accessNotConfigured" in str(e):
        error_message = "YouTube API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∫–ª—é—á–∞."
    elif "403" in str(e):
        error_message = "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ YouTube API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á."
    return error_message

class YouTubeStatsBot:
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ø—É—Ç–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        db_path = getattr(config, 'DATABASE_PATH', 'youtube_tracker.db')
        self.db_manager = DatabaseManager(db_path)
        self.youtube_stats = DatabaseYouTubeStats(db_path)
        self.request_tracker = DatabaseRequestTrackerExtended(self.db_manager)
        
        # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
        self.youtube_stats.migrate_from_json()
        
        logger.info("YouTubeStatsBot initialized with database backend")
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await update.message.reply_text(f"‚ö†Ô∏è {message_text}")
            return
        
        try:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
            loading_message = await update.message.reply_text("üìä –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º
            summary_stats = self.youtube_stats.get_summary_stats()
            today_video_stats = self.youtube_stats.get_today_video_stats()
            detailed_stats = self.youtube_stats.get_detailed_channel_stats()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_stats = self.request_tracker.get_user_stats(user_id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            message = "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º –∫–∞–Ω–∞–ª–∞–º:**\n\n"
            message += f"–ó–∞ —Å–µ–≥–æ–¥–Ω—è: {summary_stats['today']['views']:,}üëÅÔ∏è | {summary_stats['today']['likes']:,}üëç | {summary_stats['today']['comments']:,}üí¨\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            for channel_data in detailed_stats['today']:
                message += f"‚Ä¢ {channel_data['channel_name']}: {channel_data['views']:,}üëÅÔ∏è | {channel_data['likes']:,}üëç | {channel_data['comments']:,}üí¨\n"
            
            message += f"\n–ó–∞ –≤—á–µ—Ä–∞: {summary_stats['yesterday']['views']:,}üëÅÔ∏è | {summary_stats['yesterday']['likes']:,}üëç | {summary_stats['yesterday']['comments']:,}üí¨\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º –∑–∞ –≤—á–µ—Ä–∞
            for channel_data in detailed_stats['yesterday']:
                message += f"‚Ä¢ {channel_data['channel_name']}: {channel_data['views']:,}üëÅÔ∏è | {channel_data['likes']:,}üëç | {channel_data['comments']:,}üí¨\n"
            
            message += f"\n–ó–∞ –Ω–µ–¥–µ–ª—é: {summary_stats['week']['views']:,}üëÅÔ∏è | {summary_stats['week']['likes']:,}üëç | {summary_stats['week']['comments']:,}üí¨\n"
            message += f"–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è: {summary_stats['all_time']['views']:,}üëÅÔ∏è | {summary_stats['all_time']['likes']:,}üëç | {summary_stats['all_time']['comments']:,}üí¨\n\n"
            message += f"üìπ –í–∏–¥–µ–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {today_video_stats['uploaded']} –∑–∞–≥—Ä—É–∂–µ–Ω–æ, {today_video_stats['scheduled']} –≤ –æ—Ç–ª–æ–∂–∫–µ\n"
            message += f"–ö–∞–Ω–∞–ª–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è: {len(config.CHANNELS)}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–∞—Ö
            message += f"üìà **–ó–∞–ø—Ä–æ—Å–æ–≤: {user_stats['requests_today']}/{user_stats['requests_limit']}**\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏
            channel_links = []
            for channel in config.CHANNELS:
                channel_name = channel['name']
                channel_username = channel.get('username', '')
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    channel_links.append(f"[{channel_name}]({channel_link})")
                else:
                    channel_links.append(channel_name)
            
            message += f"({', '.join(channel_links)})"
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = [
                [
                    InlineKeyboardButton("–ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stats_today"),
                    InlineKeyboardButton("–ó–∞ –≤—á–µ—Ä–∞", callback_data="stats_yesterday")
                ],
                [
                    InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="stats_week"),
                    InlineKeyboardButton("–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", callback_data="stats_all_time")
                ]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "start")
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await loading_message.delete()
            await update.message.reply_text(message, reply_markup=reply_markup, parse_mode='Markdown', disable_web_page_preview=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await update.message.reply_text(get_error_message(e))
    
    async def stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
        
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await update.message.reply_text(f"‚ö†Ô∏è {message_text}")
            return
        
        await update.message.reply_text("–ü–æ–ª—É—á–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
        
        try:
            daily_stats = self.youtube_stats.get_daily_stats()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "stats")
            
            if not daily_stats:
                await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            message = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n"
            
            for channel_data in daily_stats:
                channel_name = channel_data['channel_name']
                channel_username = channel_data.get('channel_username', '')
                daily_views = channel_data['daily_views']
                daily_likes = channel_data['daily_likes']
                daily_comments = channel_data['daily_comments']
                videos = channel_data['videos']
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    message += f"üìä [{channel_name}]({channel_link}) - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n\n"
                else:
                    message += f"üìä {channel_name} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–º—É –≤–∏–¥–µ–æ
                if videos:
                    message += f"üìπ –í–∏–¥–µ–æ ({len(videos)}):\n"
                    for i, video in enumerate(videos, 1):
                        title = video['title'][:40] + "..." if len(video['title']) > 40 else video['title']
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ–æ
                        if video.get('is_scheduled', False):
                            scheduled_time = video.get('scheduled_time', '')
                            message += f"{i}. {title} ‚è∞{scheduled_time} | {video['views']:,}üëÅÔ∏è {video['likes']:,}üëç {video['comments']:,}üí¨\n"
                        else:
                            message += f"{i}. {title} | {video['views']:,}üëÅÔ∏è {video['likes']:,}üëç {video['comments']:,}üí¨\n"
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –≤–∏–¥–µ–æ
                        if video.get('comment_list') and len(video['comment_list']) > 0:
                            message += "   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n"
                            for j, comment in enumerate(video['comment_list'][:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                                message += f"      {j}. **{comment['author']}**: {comment['text']}\n"
                            if len(video['comment_list']) > 3:
                                message += f"      ... –∏ –µ—â–µ {len(video['comment_list']) - 3} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
                            message += "\n"
                    
                    message += f"\nüìà –ò—Ç–æ–≥–æ: {daily_views:,}üëÅÔ∏è {daily_likes:,}üëç {daily_comments:,}üí¨\n"
                else:
                    message += "üìπ –í–∏–¥–µ–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
                
                message += "\n" + "‚îÄ" * 30 + "\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏
            message += "üì∫ **–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã:**\n"
            channel_links = []
            for channel in config.CHANNELS:
                channel_name = channel['name']
                channel_username = channel.get('username', '')
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    channel_links.append(f"[{channel_name}]({channel_link})")
                else:
                    channel_links.append(channel_name)
            
            message += f"({', '.join(channel_links)})"
            
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            if len(message) > 4096:
                parts = [message[i:i+4096] for i in range(0, len(message), 4096)]
                for i, part in enumerate(parts):
                    if i == 0:
                        await update.message.reply_text(part, parse_mode='Markdown', disable_web_page_preview=True)
                    else:
                        await update.message.reply_text(part, parse_mode='Markdown', disable_web_page_preview=True)
            else:
                await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await update.message.reply_text(get_error_message(e))
    
    async def day_stats(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /day - —Å–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—É—Ç–∫–∏"""
        
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await update.message.reply_text(f"‚ö†Ô∏è {message_text}")
            return
        
        await update.message.reply_text("–ü–æ–ª—É—á–∞—é —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –¥–µ–Ω—å...")
        
        try:
            daily_stats = self.youtube_stats.get_daily_stats()
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "day_stats")
            
            if not daily_stats:
                await update.message.reply_text("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
                return
            
            # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≤—Å–µ–º –∫–∞–Ω–∞–ª–∞–º
            total_videos = 0
            total_views = 0
            total_likes = 0
            total_comments = 0
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–≤–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = "üìà –°–í–û–î–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ó–ê –°–£–¢–ö–ò\n"
            message += "=" * 40 + "\n\n"
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –∫–∞–Ω–∞–ª—É
            for channel_data in daily_stats:
                channel_name = channel_data['channel_name']
                channel_username = channel_data.get('channel_username', '')
                videos = channel_data['videos']
                daily_views = channel_data['daily_views']
                daily_likes = channel_data['daily_likes']
                daily_comments = channel_data['daily_comments']
                
                video_count = len(videos)
                total_videos += video_count
                total_views += daily_views
                total_likes += daily_likes
                total_comments += daily_comments
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    message += f"üé¨ [{channel_name}]({channel_link})\n"
                else:
                    message += f"üé¨ {channel_name}\n"
                message += f"   üìπ –í–∏–¥–µ–æ: {video_count}\n"
                message += f"   üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {daily_views:,}\n"
                message += f"   üëç –õ–∞–π–∫–∏: {daily_likes:,}\n"
                message += f"   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {daily_comments:,}\n\n"
            
            # –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
            message += "üèÜ –û–ë–©–ê–Ø –°–í–û–î–ö–ê\n"
            message += "‚îÄ" * 30 + "\n"
            message += f"üìπ –í—Å–µ–≥–æ –≤–∏–¥–µ–æ –∑–∞ –¥–µ–Ω—å: {total_videos}\n"
            message += f"üëÅÔ∏è –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: {total_views:,}\n"
            message += f"üëç –û–±—â–∏–µ –ª–∞–π–∫–∏: {total_likes:,}\n"
            message += f"üí¨ –û–±—â–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {total_comments:,}\n"
            
            # –°—Ä–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
            if total_videos > 0:
                avg_views = total_views / total_videos
                avg_likes = total_likes / total_videos
                avg_comments = total_comments / total_videos
                
                message += f"\nüìä –°–†–ï–î–ù–ò–ï –ü–û–ö–ê–ó–ê–¢–ï–õ–ò –ù–ê –í–ò–î–ï–û:\n"
                message += f"üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {avg_views:.0f}\n"
                message += f"üëç –õ–∞–π–∫–∏: {avg_likes:.0f}\n"
                message += f"üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {avg_comments:.0f}\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏
            message += f"\nüì∫ **–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã:**\n"
            channel_links = []
            for channel in config.CHANNELS:
                channel_name = channel['name']
                channel_username = channel.get('username', '')
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    channel_links.append(f"[{channel_name}]({channel_link})")
                else:
                    channel_links.append(channel_name)
            
            message += f"({', '.join(channel_links)})"
            
            await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await update.message.reply_text(get_error_message(e))
    
    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
        
        query = update.callback_query
        await query.answer()
        
        try:
            if query.data == "stats_today":
                await self.send_period_stats(query, 1, "—Å–µ–≥–æ–¥–Ω—è")
            elif query.data == "stats_yesterday":
                await self.send_period_stats(query, 2, "–≤—á–µ—Ä–∞")
            elif query.data == "stats_week":
                await self.send_period_stats(query, 7, "–Ω–µ–¥–µ–ª—é")
            elif query.data == "stats_all_time":
                await self.send_period_stats(query, 0, "–≤—Å–µ –≤—Ä–µ–º—è")
            elif query.data == "back_to_main":
                await self.show_main_menu(query)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏: {e}")
            await query.edit_message_text(get_error_message(e))
    
    async def send_period_stats(self, query, days, period_name):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥"""
        user_id = query.from_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await query.edit_message_text(f"‚ö†Ô∏è {message_text}")
            return
        
        await query.edit_message_text("–ü–æ–ª—É—á–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...")
        
        try:
            if days == 0:  # –í—Å–µ –≤—Ä–µ–º—è
                stats = self.youtube_stats.get_stats_by_period(365)  # –ì–æ–¥ –∫–∞–∫ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
            else:
                stats = self.youtube_stats.get_stats_by_period(days)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, f"period_stats_{days}")
            
            if not stats:
                await query.edit_message_text(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ {period_name}.")
                return
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            message = f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period_name}:\n\n"
            
            for channel_data in stats:
                channel_name = channel_data['channel_name']
                channel_username = channel_data.get('channel_username', '')
                daily_views = channel_data['daily_views']
                daily_likes = channel_data['daily_likes']
                daily_comments = channel_data['daily_comments']
                videos = channel_data['videos']
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    message += f"üìä [{channel_name}]({channel_link}) - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period_name}\n\n"
                else:
                    message += f"üìä {channel_name} - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {period_name}\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–º—É –≤–∏–¥–µ–æ
                if videos:
                    message += f"üìπ –í–∏–¥–µ–æ ({len(videos)}):\n"
                    for i, video in enumerate(videos, 1):
                        title = video['title'][:40] + "..." if len(video['title']) > 40 else video['title']
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–º –≤–∏–¥–µ–æ
                        if video.get('is_scheduled', False):
                            scheduled_time = video.get('scheduled_time', '')
                            message += f"{i}. {title} ‚è∞{scheduled_time} | {video['views']:,}üëÅÔ∏è {video['likes']:,}üëç {video['comments']:,}üí¨\n"
                        else:
                            message += f"{i}. {title} | {video['views']:,}üëÅÔ∏è {video['likes']:,}üëç {video['comments']:,}üí¨\n"
                        
                        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –≤–∏–¥–µ–æ
                        if video.get('comment_list') and len(video['comment_list']) > 0:
                            message += "   üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:\n"
                            for j, comment in enumerate(video['comment_list'][:3], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
                                message += f"      {j}. **{comment['author']}**: {comment['text']}\n"
                            if len(video['comment_list']) > 3:
                                message += f"      ... –∏ –µ—â–µ {len(video['comment_list']) - 3} –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n"
                            message += "\n"
                    
                    message += f"\nüìà –ò—Ç–æ–≥–æ: {daily_views:,}üëÅÔ∏è {daily_likes:,}üëç {daily_comments:,}üí¨\n"
                else:
                    message += "üìπ –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\n"
                
                message += "\n" + "‚îÄ" * 30 + "\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏
            message += "üì∫ **–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã:**\n"
            channel_links = []
            for channel in config.CHANNELS:
                channel_name = channel['name']
                channel_username = channel.get('username', '')
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    channel_links.append(f"[{channel_name}]({channel_link})")
                else:
                    channel_links.append(channel_name)
            
            message += f"({', '.join(channel_links)})"
            
            # –†–∞–∑–±–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏, –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
            if len(message) > 4096:
                # –î–ª—è callback query –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å —Å –∫–Ω–æ–ø–∫–æ–π
                first_part = message[:4096]
                keyboard = [[InlineKeyboardButton("üè† –î–æ–º–æ–π", callback_data="back_to_main")]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                await query.edit_message_text(first_part, reply_markup=reply_markup, parse_mode='Markdown')
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏ –∫–∞–∫ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                remaining_parts = [message[i:i+4096] for i in range(4096, len(message), 4096)]
                for part in remaining_parts:
                    await query.message.reply_text(part, parse_mode='Markdown', disable_web_page_preview=True)
            else:
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–æ–º–æ–π
                keyboard = [[InlineKeyboardButton("üè† –î–æ–º–æ–π", callback_data="back_to_main")]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                await query.edit_message_text(message, reply_markup=reply_markup, parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞ {period_name}: {e}")
            await query.edit_message_text(get_error_message(e))
    
    async def show_main_menu(self, query):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
        try:
            user_id = query.from_user.id
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
            can_request, message_text = self.request_tracker.can_make_request(user_id)
            if not can_request:
                await query.edit_message_text(f"‚ö†Ô∏è {message_text}")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º
            summary_stats = self.youtube_stats.get_summary_stats()
            today_video_stats = self.youtube_stats.get_today_video_stats()
            detailed_stats = self.youtube_stats.get_detailed_channel_stats()
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_stats = self.request_tracker.get_user_stats(user_id)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            message = "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–º –∫–∞–Ω–∞–ª–∞–º:**\n\n"
            message += f"–ó–∞ —Å–µ–≥–æ–¥–Ω—è: {summary_stats['today']['views']:,}üëÅÔ∏è {summary_stats['today']['likes']:,}üëç {summary_stats['today']['comments']:,}üí¨\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            for channel_data in detailed_stats['today']:
                message += f"‚Ä¢ {channel_data['channel_display']}: {channel_data['views']:,} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, {channel_data['likes']:,} –ª–∞–π–∫–æ–≤, {channel_data['comments']:,} –∫–æ–º–º–µ–Ω—Ç–æ–≤\n"
            
            message += f"\n–ó–∞ –≤—á–µ—Ä–∞: {summary_stats['yesterday']['views']:,}üëÅÔ∏è {summary_stats['yesterday']['likes']:,}üëç {summary_stats['yesterday']['comments']:,}üí¨\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–Ω–∞–ª–∞–º –∑–∞ –≤—á–µ—Ä–∞
            for channel_data in detailed_stats['yesterday']:
                message += f"‚Ä¢ {channel_data['channel_display']}: {channel_data['views']:,} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, {channel_data['likes']:,} –ª–∞–π–∫–æ–≤, {channel_data['comments']:,} –∫–æ–º–º–µ–Ω—Ç–æ–≤\n"
            
            message += f"\n–ó–∞ –Ω–µ–¥–µ–ª—é: {summary_stats['week']['views']:,}üëÅÔ∏è {summary_stats['week']['likes']:,}üëç {summary_stats['week']['comments']:,}üí¨\n"
            message += f"–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è: {summary_stats['all_time']['views']:,}üëÅÔ∏è {summary_stats['all_time']['likes']:,}üëç {summary_stats['all_time']['comments']:,}üí¨\n\n"
            message += f"üìπ –í–∏–¥–µ–æ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {today_video_stats['uploaded']} –∑–∞–≥—Ä—É–∂–µ–Ω–æ, {today_video_stats['scheduled']} –≤ –æ—Ç–ª–æ–∂–∫–µ\n"
            message += f"–ö–∞–Ω–∞–ª–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è: {len(config.CHANNELS)}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–∞—Ö
            message += f"üìà **–ó–∞–ø—Ä–æ—Å–æ–≤: {user_stats['requests_today']}/{user_stats['requests_limit']}**\n"
            message += f"API –∫–≤–æ—Ç–∞: {user_stats['api_quota_used']:,}/{user_stats['api_quota_limit']:,}\n\n"
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ —Å –≥–∏–ø–µ—Ä—Å—Å—ã–ª–∫–∞–º–∏
            channel_links = []
            for channel in config.CHANNELS:
                channel_name = channel['name']
                channel_username = channel.get('username', '')
                if channel_username:
                    channel_link = f"https://www.youtube.com/{channel_username}"
                    channel_links.append(f"[{channel_name}]({channel_link})")
                else:
                    channel_links.append(channel_name)
            
            message += f"({', '.join(channel_links)})"
            
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
            keyboard = [
                [
                    InlineKeyboardButton("–ó–∞ —Å–µ–≥–æ–¥–Ω—è", callback_data="stats_today"),
                    InlineKeyboardButton("–ó–∞ –≤—á–µ—Ä–∞", callback_data="stats_yesterday")
                ],
                [
                    InlineKeyboardButton("–ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="stats_week"),
                    InlineKeyboardButton("–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è", callback_data="stats_all_time")
                ]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "main_menu")
            
            await query.edit_message_text(message, reply_markup=reply_markup, parse_mode='Markdown')
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–≤–æ–¥–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await query.edit_message_text(get_error_message(e))
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        
        help_text = """
ü§ñ **–ö–û–ú–ê–ù–î–´ –ë–û–¢–ê:**

üìä **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
/stats - –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
/day - –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—É—Ç–∫–∏

üìà **–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Ç—Ä–µ–Ω–¥—ã:**
/analytics - –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (7 –¥–Ω–µ–π)
/trends - –¢—Ä–µ–Ω–¥—ã —Ä–æ—Å—Ç–∞ –∫–∞–Ω–∞–ª–æ–≤
/quota - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤

üõ†Ô∏è **–°–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/dbstats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∞–¥–º–∏–Ω)
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

üíæ **–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–º–µ—Å—Ç–æ JSON —Ñ–∞–π–ª–æ–≤
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ç—Ä–µ–Ω–¥—ã
‚Ä¢ –£–º–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ TTL
‚Ä¢ Batch –∑–∞–ø—Ä–æ—Å—ã –∫ YouTube API
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

üìä **–ß—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è:**
‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã, –ª–∞–π–∫–∏, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
‚Ä¢ –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ
‚Ä¢ –¢—Ä–µ–Ω–¥—ã –ø–æ –¥–Ω—è–º
‚Ä¢ –¢–æ–ø –∫–æ–Ω—Ç–µ–Ω—Ç

‚ö†Ô∏è **–õ–∏–º–∏—Ç—ã:**
‚Ä¢ 15 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ 2 –º–∏–Ω—É—Ç—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚Ä¢ –£–º–Ω–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ (1—á/15–º–∏–Ω/30–º–∏–Ω)
        """
        await update.message.reply_text(help_text, parse_mode='Markdown')
    
    async def quota_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quota - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤"""
        user_id = update.effective_user.id
        user_stats = self.request_tracker.get_user_stats(user_id)
        
        message = "üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤:**\n\n"
        message += f"üë§ **–í–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã:**\n"
        message += f"‚Ä¢ –°–µ–≥–æ–¥–Ω—è: {user_stats['requests_today']}/{user_stats['requests_limit']}\n"
        message += f"‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å: {user_stats['remaining_requests']}\n\n"
        message += f"üåê **API –∫–≤–æ—Ç–∞:**\n"
        message += f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {user_stats['api_quota_used']:,}/{user_stats['api_quota_limit']:,}\n"
        message += f"‚Ä¢ –û—Å—Ç–∞–ª–æ—Å—å: {user_stats['api_quota_limit'] - user_stats['api_quota_used']:,}\n\n"
        message += f"‚è∞ **–õ–∏–º–∏—Ç—ã:**\n"
        message += f"‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å: {config.DAILY_REQUEST_LIMIT}\n"
        message += f"‚Ä¢ –ö—É–ª–¥–∞—É–Ω –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏: {config.REQUEST_COOLDOWN // 60} –º–∏–Ω—É—Ç\n"
        message += f"‚Ä¢ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: —É–º–Ω–æ–µ —Å —Ä–∞–∑–Ω—ã–º–∏ TTL"
        
        await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
    
    async def analytics_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analytics - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É"""
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await update.message.reply_text(f"‚ö†Ô∏è {message_text}")
            return
        
        try:
            loading_message = await update.message.reply_text("üìà –ó–∞–≥—Ä—É–∂–∞—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É...")
            
            # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –¥–∞—à–±–æ—Ä–¥
            dashboard = self.youtube_stats.get_analytics_dashboard(days=7)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "analytics")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            message = "üìà **–ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –î–ê–®–ë–û–†–î (7 –¥–Ω–µ–π)**\n"
            message += "=" * 40 + "\n\n"
            
            # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            summary = dashboard.get('summary', {})
            analytics = dashboard.get('analytics', {})
            
            if analytics:
                message += f"üéØ **–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:**\n"
                message += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {analytics.get('active_channels', 0)}\n"
                message += f"‚Ä¢ –í—Å–µ–≥–æ –≤–∏–¥–µ–æ: {analytics.get('total_videos_uploaded', 0)}\n"
                message += f"‚Ä¢ –û–±—â–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã: {analytics.get('total_views', 0):,}\n"
                message += f"‚Ä¢ –û–±—â–∏–µ –ª–∞–π–∫–∏: {analytics.get('total_likes', 0):,}\n"
                message += f"‚Ä¢ –†–æ—Å—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {analytics.get('total_subscriber_growth', 0):,}\n\n"
            
            # –¢–æ–ø –∫–æ–Ω—Ç–µ–Ω—Ç
            top_content = dashboard.get('top_content', {})
            top_videos = top_content.get('top_videos', [])
            
            if top_videos:
                message += f"üèÜ **–¢–æ–ø –≤–∏–¥–µ–æ –∑–∞ –Ω–µ–¥–µ–ª—é:**\n"
                for i, video in enumerate(top_videos[:3], 1):
                    title = video['title'][:30] + "..." if len(video['title']) > 30 else video['title']
                    message += f"{i}. {title}\n"
                    message += f"   üì∫ {video['channel_name']}: {video['views']:,} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤\n"
                message += "\n"
            
            # –¢—Ä–µ–Ω–¥—ã
            trends = dashboard.get('trends', {})
            if trends:
                message += f"üìä **–¢—Ä–µ–Ω–¥—ã –∫–∞–Ω–∞–ª–æ–≤:**\n"
                for channel_name, channel_trends in list(trends.items())[:3]:
                    views_trend = channel_trends.get('total_views', [])
                    if views_trend:
                        latest = views_trend[-1]
                        growth = latest.get('growth_percentage', 0)
                        trend_emoji = "üìà" if growth > 0 else "üìâ" if growth < 0 else "‚û°Ô∏è"
                        message += f"{trend_emoji} {channel_name}: {growth:+.1f}%\n"
                message += "\n"
            
            message += f"üíæ **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:**\n"
            db_stats = self.youtube_stats.get_database_stats()
            if 'database' in db_stats:
                db = db_stats['database']
                message += f"‚Ä¢ –í–∏–¥–µ–æ –≤ –ë–î: {db.get('videos_count', 0):,}\n"
                message += f"‚Ä¢ –ó–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {db.get('video_stats_count', 0):,}\n"
                message += f"‚Ä¢ –†–∞–∑–º–µ—Ä –ë–î: {db.get('file_size_mb', 0)} –ú–ë\n"
            
            await loading_message.delete()
            await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
            await update.message.reply_text(get_error_message(e))
    
    async def trends_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /trends - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç—Ä–µ–Ω–¥—ã –∫–∞–Ω–∞–ª–æ–≤"""
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
        can_request, message_text = self.request_tracker.can_make_request(user_id)
        if not can_request:
            await update.message.reply_text(f"‚ö†Ô∏è {message_text}")
            return
        
        try:
            loading_message = await update.message.reply_text("üìä –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç—Ä–µ–Ω–¥—ã...")
            
            # –í—ã—á–∏—Å–ª—è–µ–º —Ç—Ä–µ–Ω–¥—ã
            self.youtube_stats.calculate_trends(days_back=7)
            
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            self.request_tracker.record_request(user_id, "trends")
            
            message = "üìä **–¢–†–ï–ù–î–´ –ö–ê–ù–ê–õ–û–í (7 –¥–Ω–µ–π)**\n"
            message += "=" * 40 + "\n\n"
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–µ–Ω–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            for channel in config.CHANNELS[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–∞–ª–∞
                channel_id = channel['channel_id']
                channel_name = channel['name']
                
                trends = self.youtube_stats.get_historical_trends(channel_id, days=7)
                
                if trends:
                    message += f"üì∫ **{channel_name}:**\n"
                    
                    for metric, trend_data in trends.items():
                        if trend_data:
                            latest = trend_data[-1]
                            growth = latest['growth_percentage']
                            trend_emoji = "üìà" if growth > 0 else "üìâ" if growth < 0 else "‚û°Ô∏è"
                            
                            metric_names = {
                                'total_views': '–ü—Ä–æ—Å–º–æ—Ç—Ä—ã',
                                'total_likes': '–õ–∞–π–∫–∏', 
                                'total_comments': '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'
                            }
                            
                            metric_name = metric_names.get(metric, metric)
                            message += f"  {trend_emoji} {metric_name}: {growth:+.1f}% ({latest['growth_absolute']:+,})\n"
                    
                    message += "\n"
            
            await loading_message.delete()
            await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç—Ä–µ–Ω–¥–æ–≤: {e}")
            await update.message.reply_text(get_error_message(e))
    
    async def dbstats_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dbstats - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
        user_id = update.effective_user.id
        
        # –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞
        if user_id != config.ADMIN_ID:
            await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
            return
        
        try:
            db_stats = self.youtube_stats.get_database_stats()
            system_stats = self.request_tracker.get_system_stats()
            
            message = "üíæ **–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•**\n"
            message += "=" * 40 + "\n\n"
            
            if 'database' in db_stats:
                db = db_stats['database']
                message += f"üìä **–†–∞–∑–º–µ—Ä –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ:**\n"
                message += f"‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {db.get('file_size_mb', 0)} –ú–ë\n"
                message += f"‚Ä¢ –í–µ—Ä—Å–∏—è —Å—Ö–µ–º—ã: {db.get('schema_version', 0)}\n"
                message += f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {db.get('users_count', 0):,}\n"
                message += f"‚Ä¢ –ö–∞–Ω–∞–ª–æ–≤: {db.get('channels_count', 0):,}\n"
                message += f"‚Ä¢ –í–∏–¥–µ–æ: {db.get('videos_count', 0):,}\n"
                message += f"‚Ä¢ –ó–∞–ø–∏—Å–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {db.get('video_stats_count', 0):,}\n"
                message += f"‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {db.get('comments_count', 0):,}\n"
                message += f"‚Ä¢ –ó–∞–ø—Ä–æ—Å–æ–≤: {db.get('user_requests_count', 0):,}\n\n"
            
            if 'cache' in db_stats:
                cache = db_stats['cache']
                overall = cache.get('overall', {})
                message += f"üóÑÔ∏è **–ö—ç—à:**\n"
                message += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {overall.get('active', 0):,}\n"
                message += f"‚Ä¢ –£—Å—Ç–∞—Ä–µ–≤—à–∏—Ö: {overall.get('expired', 0):,}\n"
                message += f"‚Ä¢ –í—Å–µ–≥–æ: {overall.get('total', 0):,}\n\n"
            
            # –°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è
            today = system_stats.get('today', {})
            message += f"üìà **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ —Å–µ–≥–æ–¥–Ω—è:**\n"
            message += f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {today.get('active_users', 0)}\n"
            message += f"‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {today.get('total_requests', 0)}\n"
            message += f"‚Ä¢ API –∫–≤–æ—Ç–∞: {system_stats.get('api_quota', {}).get('quota_used', 0):,}\n"
            message += f"‚Ä¢ –û—à–∏–±–æ–∫: {today.get('errors', 0)}\n"
            
            await update.message.reply_text(message, parse_mode='Markdown', disable_web_page_preview=True)
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ë–î: {e}")
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        logger.info("Initializing YouTube Stats Bot...")
        bot = YouTubeStatsBot()
        logger.info("Bot instance created successfully")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        logger.info("Creating Telegram application...")
        application = Application.builder().token(config.TELEGRAM_TOKEN).build()
        logger.info("Telegram application created successfully")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        logger.info("Adding command handlers...")
        application.add_handler(CommandHandler("start", bot.start))
        application.add_handler(CommandHandler("stats", bot.stats))
        application.add_handler(CommandHandler("day", bot.day_stats))
        
        application.add_handler(CommandHandler("analytics", bot.analytics_command))
        application.add_handler(CommandHandler("trends", bot.trends_command))
        application.add_handler(CommandHandler("dbstats", bot.dbstats_command))
        
        application.add_handler(CommandHandler("quota", bot.quota_command))
        application.add_handler(CommandHandler("help", bot.help_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
        application.add_handler(CallbackQueryHandler(bot.button_callback))
        logger.info("All handlers added successfully")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("Starting bot polling...")
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except Exception as e:
        logger.error(f"Failed to start bot: {e}")
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
