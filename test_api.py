#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ YouTube API
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

import config
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError

def test_youtube_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ YouTube API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ YouTube API...")
    print(f"API Key: {config.YOUTUBE_API_KEY[:10]}...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç API
        youtube = build('youtube', 'v3', developerKey=config.YOUTUBE_API_KEY)
        print("‚úÖ YouTube API –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞...")
        test_response = youtube.videos().list(
            part='snippet',
            chart='mostPopular',
            regionCode='US',
            maxResults=1
        ).execute()
        
        if test_response and 'items' in test_response:
            print("‚úÖ –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            video_title = test_response['items'][0]['snippet']['title']
            print(f"üìπ –ü–æ–ª—É—á–µ–Ω–æ –≤–∏–¥–µ–æ: {video_title}")
        else:
            print("‚ùå –ë–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–Ω–∞–ª—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        print(f"\nüì∫ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ {len(config.CHANNELS)} –∫–∞–Ω–∞–ª–æ–≤...")
        
        for i, channel in enumerate(config.CHANNELS, 1):
            channel_id = channel['channel_id']
            channel_name = channel['name']
            
            print(f"\n{i}. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: {channel_name}")
            
            try:
                channel_response = youtube.channels().list(
                    part='snippet,statistics',
                    id=channel_id
                ).execute()
                
                if channel_response.get('items'):
                    channel_info = channel_response['items'][0]
                    actual_name = channel_info['snippet']['title']
                    subscriber_count = channel_info['statistics'].get('subscriberCount', 'N/A')
                    
                    print(f"   ‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {actual_name}")
                    print(f"   üë• –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {subscriber_count}")
                else:
                    print(f"   ‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {channel_id}")
                    
            except HttpError as e:
                if e.resp.status == 403:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (403): {e}")
                elif e.resp.status == 404:
                    print(f"   ‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (404): {e}")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ HTTP {e.resp.status}: {e}")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except HttpError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {e}")
        if e.resp.status == 403:
            print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   ‚Ä¢ API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
            print("   ‚Ä¢ YouTube Data API v3 –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ –ø—Ä–æ–µ–∫—Ç–µ")
            print("   ‚Ä¢ –ü—Ä–µ–≤—ã—à–µ–Ω–∞ –∫–≤–æ—Ç–∞ API")
        elif e.resp.status == 400:
            print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print("   ‚Ä¢ –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π API –∫–ª—é—á")
            print("   ‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
        return False
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

async def test_telegram_bot():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç Telegram –±–æ—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...")
    print(f"Bot Token: {config.TELEGRAM_TOKEN[:10]}...")
    
    try:
        from telegram import Bot
        bot = Bot(token=config.TELEGRAM_TOKEN)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username}")
        print(f"üìù –ò–º—è –±–æ—Ç–∞: {bot_info.first_name}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞: {e}")
        return False

async def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è YouTube Analytics Bot...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º YouTube API
    youtube_ok = test_youtube_api()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram –±–æ—Ç–∞
    telegram_ok = await test_telegram_bot()
    
    print("\n" + "=" * 50)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"YouTube API: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if youtube_ok else '‚ùå –û—à–∏–±–∫–∞'}")
    print(f"Telegram Bot: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if telegram_ok else '‚ùå –û—à–∏–±–∫–∞'}")
    
    if youtube_ok and telegram_ok:
        print("\nüéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!")
        print("–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        if not youtube_ok:
            print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ YouTube API –∫–ª—é—á –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        if not telegram_ok:
            print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram Bot Token")

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
