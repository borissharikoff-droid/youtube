#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ channel_manager
"""
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from channel_manager import channel_manager
import json

def test_channel_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å channel_manager"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Channel Manager...")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
    print("1. üì∫ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –∫–∞–Ω–∞–ª–æ–≤:")
    channels = channel_manager.get_channels()
    print(f"   –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
    for i, channel in enumerate(channels, 1):
        print(f"   {i}. {channel['name']} (ID: {channel.get('channel_id', '–ù–ï–¢')})")
    print()
    
    # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    print("2. ‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞:")
    result = channel_manager.add_channel(
        name="–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",
        username="@test_channel",
        channel_id="UCtest123456789"
    )
    if result['success']:
        print(f"   ‚úÖ {result['message']}")
    else:
        print(f"   ‚ùå {result['message']}")
    print()
    
    # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç
    print("3. üîÑ –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç:")
    result = channel_manager.add_channel(
        name="–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª",
        username="@test_channel",
        channel_id="UCtest123456789"
    )
    if result['success']:
        print(f"   ‚ùå –î—É–±–ª–∏–∫–∞—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏)")
    else:
        print(f"   ‚úÖ {result['message']}")
    print()
    
    # –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    print("4. üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É:")
    test_channel = channel_manager.get_channel_by_index(0)
    if test_channel:
        print(f"   ‚úÖ –ö–∞–Ω–∞–ª 0: {test_channel['name']}")
    else:
        print("   ‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print()
    
    # –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞ –ø–æ –∏–º–µ–Ω–∏
    print("5. üîç –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞ –ø–æ –∏–º–µ–Ω–∏:")
    found_channel = channel_manager.find_channel_by_name("–ì–æ–≤–æ—Ä–∏–ª–∫–∏ —Å–æ—Ñ—Ç–æ–º")
    if found_channel:
        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω: {found_channel['name']}")
    else:
        print("   ‚ùå –ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print()
    
    # –¢–µ—Å—Ç 6: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    print("6. ‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞:")
    # –ù–∞–π–¥–µ–º –∏–Ω–¥–µ–∫—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    test_index = -1
    for i, channel in enumerate(channel_manager.get_channels()):
        if channel['name'] == "–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª":
            test_index = i
            break
    
    if test_index >= 0:
        result = channel_manager.remove_channel(test_index)
        if result['success']:
            print(f"   ‚úÖ {result['message']}")
        else:
            print(f"   ‚ùå {result['message']}")
    else:
        print("   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    print()
    
    # –¢–µ—Å—Ç 7: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print("7. üìä –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤:")
    final_channels = channel_manager.get_channels()
    print(f"   –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: {len(final_channels)}")
    for i, channel in enumerate(final_channels, 1):
        print(f"   {i}. {channel['name']} (ID: {channel.get('channel_id', '–ù–ï–¢')})")
    print()
    
    # –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    print("8. üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    try:
        with open('channels_config.json', 'r', encoding='utf-8') as f:
            config_data = json.load(f)
            print(f"   ‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω")
            print(f"   üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {config_data.get('last_updated', '–ù–ï–¢')}")
            print(f"   üì∫ –ö–∞–Ω–∞–ª–æ–≤ –≤ —Ñ–∞–π–ª–µ: {len(config_data.get('channels', []))}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
    
    print()
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Channel Manager –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_channel_manager()
